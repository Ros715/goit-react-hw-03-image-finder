{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","components/apiService/apiService.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","props","onSubmit","e","preventDefault","state","name","className","this","type","onChange","setState","currentTarget","value","autoComplete","autoFocus","placeholder","React","Component","ImageGallery","children","ImageGalleryItem","onClick","photo","largeImageURL","src","webformatURL","alt","Button","Modal","componentDidMount","document","addEventListener","key","onClose","url","apiService","searchQuery","page","perPage","fetch","then","response","json","App","loadInProggress","enableLoadMore","enableModal","photosList","query","largeURL","formatQuery","text","trim","split","join","loadPhotos","apiOutput","hits","length","concat","window","scrollTo","top","documentElement","scrollHeight","behavior","onNewRequest","onLoadMore","closeModal","map","id","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c6747ef.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Searchbar.css\";\r\n\r\nclass Searchbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: \"\" };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state.name);\r\n    this.props.onSubmit(this.state.name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\" onSubmit={this.onSubmit}>\r\n        <form className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={(e) => {\r\n              //console.log(\"name\", e.currentTarget.value);\r\n              this.setState({ name: e.currentTarget.value });\r\n            }}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGallery.css\";\r\n//import ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem.js\";\r\n\r\nclass ImageGallery extends React.Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n  }*/\r\n\r\n  render() {\r\n    return <ul className=\"ImageGallery\">{this.props.children}</ul>;\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nclass ImageGalleryItem extends React.Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          onClick={() => this.props.onClick(this.props.photo.largeImageURL)}\r\n          src={this.props.photo.webformatURL}\r\n          alt=\"\"\r\n          className=\"ImageGalleryItem-image\"\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  photo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nclass Button extends React.Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button type=\"button\" className=\"Button\" onClick={this.props.onClick}>\r\n          Load more\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Modal.css\";\r\n\r\nclass Modal extends React.Component {\r\n  /*constructor(props) {\r\n    super(props);\r\n  }*/\r\n\r\n  componentDidMount = () => {\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      //console.log(\"code\", e.code, \"key\", e.key, \"keyCode\", e.keyCode);\r\n      if (e.key === \"Escape\") {\r\n        this.props.onClose();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.props.onClose}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.url} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","export default function apiService(searchQuery, page, perPage) {\r\n  const myKey = \"22353815-5fa21056c210e4ef7062efe69\";\r\n  //console.log(\"page\", page, searchQuery);\r\n  return fetch(\r\n    `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=${perPage}&key=${myKey}`\r\n  ).then((response) => response.json());\r\n}\r\n","import React from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar.js\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery.js\";\nimport ImageGalleryItem from \"./components/ImageGalleryItem/ImageGalleryItem.js\";\nimport Button from \"./components/Button/Button.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport apiService from \"./components/apiService/apiService.js\";\nimport \"./App.css\";\n//import { v4 as uuidv4 } from \"uuid\";\nimport Loader from \"react-loader-spinner\";\n\nclass App extends React.Component {\n  state = {\n    loadInProggress: false,\n    enableLoadMore: false,\n    enableModal: false,\n    photosList: [],\n    query: \"\",\n    page: 1,\n    perPage: 12,\n    largeURL: \"\",\n  };\n\n  /*constructor(props) {\n    super(props);\n  }*/\n\n  formatQuery = (text) => {\n    return text.trim().split(\" \").join(\"+\");\n  };\n\n  loadPhotos = (query, page) => {\n    //console.log(\"query=\", query, \"page=\", page);\n    this.setState({ loadInProggress: true });\n    apiService(query, page, this.state.perPage).then((apiOutput) => {\n      this.setState({\n        query: query,\n        page: page,\n        enableLoadMore: apiOutput.hits.length === this.state.perPage,\n        loadInProggress: false,\n        photosList: this.state.photosList.concat(apiOutput.hits),\n      });\n\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    });\n  };\n\n  onNewRequest = (query) => {\n    this.setState({\n      photosList: [],\n    });\n    this.loadPhotos(query, 1);\n  };\n\n  onLoadMore = () => {\n    this.loadPhotos(this.state.query, this.state.page + 1);\n  };\n\n  closeModal = () => {\n    this.setState({ enableModal: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Searchbar onSubmit={this.onNewRequest} />\n        <ImageGallery photosList={this.state.photosList}>\n          {this.state.photosList.map((photo) => {\n            return (\n              <ImageGalleryItem\n                photo={photo}\n                key={photo.id}\n                onClick={(url) => {\n                  this.setState({ enableModal: true, largeURL: url });\n                }}\n              />\n            );\n          })}\n        </ImageGallery>\n        {this.state.loadInProggress && (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        )}\n        {this.state.enableLoadMore && <Button onClick={this.onLoadMore} />}\n        {this.state.enableModal && (\n          <Modal url={this.state.largeURL} onClose={this.closeModal} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}